[alias]
    # Git commit and automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected
    c = commit -am
    # Git pull
    up = pull
    # Git push
    p = push
    # View the current working tree status using the short format
    s = status -s
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --pretty=oneline -n 20 --graph --abbrev-commit
    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    # Switch to a branch, creating it if necessary
    go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v
    # List contributors with number of commits
    contributors = shortlog --summary --numbered
    # List commits in short form, with colors and branch/tag annotations.
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    # List commits showing changed files is invoked with git ll and looks like this:
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # List with no colors if you need to chain the out put with Unix pipes:
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    # List oneline commits showing dates: (git lds -10)
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    # List oneline commits showing relative dates: (git ld -10)
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    # Short git log:
    le = log --oneline --decorate
    # List all your Aliases (la)
    la = "!git config -l | grep alias | cut -c 7-"
    # `git forget` for quickly discarding unstaged changes
    # https://stackoverflow.com/a/1021384
    forget = checkout .
    # Undo last commit, I keep using this, assuming it exists… Now it does
    undo = reset HEAD~

    # Useful commands

    # Leaderboards
    # git shortlog -sn
    # git shortlog -sn --since='10 weeks' --until='2 weeks'

    # See Which Branches You Recently Worked On
    # git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"

    # Remind Yourself What You’ve Been Up To
    # git log --all --oneline --no-merges --author=<your email address>

    # Generate a Changelog
    # git log --oneline --no-merges <last tag>..HEAD

    # View Complex Logs
    # git log --graph --all --decorate --stat --date=iso

    # Review What You’re About to Push
    # git log --oneline --no-merges <remote>/<branch>..HEAD

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore_global
    attributesfile = ~/.gitattributes

    # Treat spaces before tabs and all kinds of trailing whitespace as an error
    # [default] trailing-space: looks for spaces at the end of a line
    # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
    # whitespace = space-before-tab,-indent-with-non-tab,trailing-space

    # Mostly for windows, but I think it is deprecated now
    longpaths = true

    # Make `git rebase` safer on OS X
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false

    # Prevent showing files whose names contain non-ASCII symbols as unversioned.
    # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false
    editor = subl -n -w

[color]
    # Use colors in Git commands that are capable of colored output when
    # outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
    ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
	meta = 227
	frag = magenta bold
	old = red bold
	new = green bold
	commit = 227 bold
	whitespace = red reverse

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[diff]
    # Detect copies as well as renames
    renames = copies

[diff "bin"]
    # Use `hexdump` to diff binary files
    textconv = hexdump -v -C

[help]
    # Automatically correct and execute mistyped commands
    autocorrect = 1

[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

[push]
    default = simple
    # Make `git push` push relevant annotated tags when pushing branches out.
    followTags = true

# [init]
# 	templatedir = ~/.git-templates

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[mergetool]
	keepBackup = true

[rerere]
	enabled = true
